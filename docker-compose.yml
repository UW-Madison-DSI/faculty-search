version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - /volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - /volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.11
    command: [ "milvus", "run", "standalone" ]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - /volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  fastapi:
    container_name: fastapi
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      OPENAI_API_KEY: '${OPENAI_API_KEY}'
      AUTHOR_DIR: ./data/raw/campus_users
      MILVUS_ALIAS: default
      MILVUS_HOST: milvus-standalone
      MILVUS_PORT: 19530
      DEBUG: 1
    ports:
      - "8765:8765"
    depends_on:
      - "milvus"
    volumes:
      - ./cert.pem:/app/cert.pem
      - ./privkey.pem:/app/privkey.pem
    command:
      [
        "uvicorn",
        "api:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8765",
        "--ssl-keyfile",
        "privkey.pem",
        "--ssl-certfile",
        "cert.pem"
      ]

  flask:
    container_name: flask
    image: ghcr.io/jasonlo/community-search-frontend:latest  # pull from ghcr for CI
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    ports:
      - "443:443"
    environment:
      - DEBUG=1
      - PORT=443
      - HOST=0.0.0.0
      - UPLOAD_FOLDER=/tmp_pdfs
    volumes:
      - ./cert.pem:/app/cert.pem
      - ./privkey.pem:/app/privkey.pem
    command: [ python, ./services/app.py ]


  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./cert.pem:/etc/nginx/ssl/cert.pem
      - ./privkey.pem:/etc/nginx/ssl/privkey.pem
    ports:
      - "80:80"



